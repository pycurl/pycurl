name: CI-Windows

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/ci.yml'
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/cibuildwheel.yml'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/ci.yml'
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/cibuildwheel.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: windows-2022
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      matrix:
        arch: ["x64"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
      fail-fast: false
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}
        allow-prereleases: true
    - name: 'Setup NuGet credentials'
      shell: 'bash'
      run: |
        nuget="$(vcpkg fetch nuget | tail -n 1)"
        "${nuget}" \
          sources add \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "${GITHUB_REPOSITORY_OWNER}" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        "${nuget}" \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"
    - name: Install packages
      run: vcpkg install curl[brotli,core,http2,non-http,ssh,ssl]:${{ matrix.arch }}-windows
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel delvewheel
        pip install flake8 pytest -r requirements-dev.txt
    - name: Build
      env:
        PYCURL_SSL_LIBRARY: schannel
        PYCURL_CURL_DIR: 'C:/vcpkg/packages/curl_${{ matrix.arch }}-windows'
      run: |
        python setup.py bdist_wheel
    - name: Repair & install built wheel
      run: |
        delvewheel repair --add-path $VCPKG_INSTALLATION_ROOT/installed/${{ matrix.arch }}-windows/bin dist/*.whl
        pip install wheelhouse/*.whl
      shell: bash
    - name: Test with pytest
      run: |
        python -c 'import pycurl; print(pycurl.version)'
        pytest -v -ra
    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.python-version }}
        path: wheelhouse/*.whl

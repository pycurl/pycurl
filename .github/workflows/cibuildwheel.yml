name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'PyPI Environment for Deployment'
        type: choice
        options:
          - none
          - pypi
          - testpypi
        required: true
        default: none

jobs:
  build-sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install libcurl (for curl-config)
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-gnutls-dev
      - name: Build sdist
        run: python setup.py sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          path: dist/pycurl-*.tar.gz
          name: sdist

  package-wheel:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-13
          - os: macOS-14
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-22.04-arm
            arch: aarch64
          - os: windows-2022
            arch: x86
          - os: windows-2022
            arch: x64

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: ${{ matrix.arch }}

      - name: 'Setup NuGet credentials'
        if: runner.os == 'Windows'
        shell: 'bash'
        run: |
          nuget="$(vcpkg fetch nuget | tail -n 1)"
          "${nuget}" \
            sources add \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "${GITHUB_REPOSITORY_OWNER}" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          "${nuget}" \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"

      - name: Install packages (Windows)
        if: runner.os == 'Windows'
        run: vcpkg install curl[brotli,core,http2,non-http,schannel,ssh]:${{ matrix.arch }}-windows

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch == 'x86' && 'x86' || 'AMD64' }}
          CIBW_ENVIRONMENT_WINDOWS: PYCURL_CURL_DIR=C:/vcpkg/packages/curl_${{ matrix.arch }}-windows PYCURL_SSL_LIBRARY=schannel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:/vcpkg/installed/${{ matrix.arch }}-windows/bin -w {dest_dir} {wheel}
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}

  deploy:
    name: Deploy wheels to PyPI
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.environment == 'pypi' || github.event.inputs.environment == 'testpypi' }}
    needs: [build-sdist, package-wheel]
    environment: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ github.event.inputs.environment == 'pypi' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}
